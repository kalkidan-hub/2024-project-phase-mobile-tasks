// Mocks generated by Mockito 5.4.4 from annotations
// in ecommerce_app/test/features/ecommerce/data/repositories/product_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:ecommerce_app/core/platform/network_info.dart' as _i7;
import 'package:ecommerce_app/features/ecommerce/data/datasource/local_datasource.dart'
    as _i6;
import 'package:ecommerce_app/features/ecommerce/data/datasource/remote_datasource.dart'
    as _i4;
import 'package:ecommerce_app/features/ecommerce/data/models/product_model.dart'
    as _i3;
import 'package:ecommerce_app/features/ecommerce/domain/entities/product.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeProduct_0 extends _i1.SmartFake implements _i2.Product {
  _FakeProduct_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeProductModel_1 extends _i1.SmartFake implements _i3.ProductModel {
  _FakeProductModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ProductRemoteDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductRemoteDatasource extends _i1.Mock
    implements _i4.ProductRemoteDatasource {
  MockProductRemoteDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<List<_i2.Product>> viewAllProduct() => (super.noSuchMethod(
        Invocation.method(
          #viewAllProduct,
          [],
        ),
        returnValue: _i5.Future<List<_i2.Product>>.value(<_i2.Product>[]),
      ) as _i5.Future<List<_i2.Product>>);

  @override
  _i5.Future<_i2.Product> viewAProduct(int? id) => (super.noSuchMethod(
        Invocation.method(
          #viewAProduct,
          [id],
        ),
        returnValue: _i5.Future<_i2.Product>.value(_FakeProduct_0(
          this,
          Invocation.method(
            #viewAProduct,
            [id],
          ),
        )),
      ) as _i5.Future<_i2.Product>);

  @override
  _i5.Future<_i2.Product> createProduct(_i2.Product? product) =>
      (super.noSuchMethod(
        Invocation.method(
          #createProduct,
          [product],
        ),
        returnValue: _i5.Future<_i2.Product>.value(_FakeProduct_0(
          this,
          Invocation.method(
            #createProduct,
            [product],
          ),
        )),
      ) as _i5.Future<_i2.Product>);

  @override
  _i5.Future<_i2.Product> updateProduct(_i2.Product? product) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProduct,
          [product],
        ),
        returnValue: _i5.Future<_i2.Product>.value(_FakeProduct_0(
          this,
          Invocation.method(
            #updateProduct,
            [product],
          ),
        )),
      ) as _i5.Future<_i2.Product>);

  @override
  _i5.Future<_i2.Product> deleteProduct(int? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteProduct,
          [id],
        ),
        returnValue: _i5.Future<_i2.Product>.value(_FakeProduct_0(
          this,
          Invocation.method(
            #deleteProduct,
            [id],
          ),
        )),
      ) as _i5.Future<_i2.Product>);
}

/// A class which mocks [ProductLocalDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductLocalDatasource extends _i1.Mock
    implements _i6.ProductLocalDatasource {
  MockProductLocalDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<void> cacheProduct(_i3.ProductModel? product) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheProduct,
          [product],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> cacheProducts(List<_i3.ProductModel>? products) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheProducts,
          [products],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<List<_i3.ProductModel>> getProducts() => (super.noSuchMethod(
        Invocation.method(
          #getProducts,
          [],
        ),
        returnValue:
            _i5.Future<List<_i3.ProductModel>>.value(<_i3.ProductModel>[]),
      ) as _i5.Future<List<_i3.ProductModel>>);

  @override
  _i5.Future<_i3.ProductModel> getProduct(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getProduct,
          [id],
        ),
        returnValue: _i5.Future<_i3.ProductModel>.value(_FakeProductModel_1(
          this,
          Invocation.method(
            #getProduct,
            [id],
          ),
        )),
      ) as _i5.Future<_i3.ProductModel>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i7.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
}
